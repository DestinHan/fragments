name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  unit-tests:
    runs-on: ubuntu-latest
    needs: [lint, dockerfile-lint]
    env:
      AUTH_STRATEGY: http
      BASIC_USER: user
      BASIC_PASS: pass
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm test
      - name: Coverage (log only)
        run: npm run coverage

  docker-hub:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [unit-tests]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Short SHA
        id: vars
        shell: bash
        run: echo "sha=${GITHUB_SHA::12}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/fragments:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/fragments:main
            ${{ secrets.DOCKERHUB_USERNAME }}/fragments:${{ steps.vars.outputs.sha }}
